/************************************************************************************************************************
给定一个整数 n，返回 n! 结果尾数中零的数量。

示例 1:

输入: 3
输出: 0
解释: 3! = 6, 尾数中没有零。
示例 2:

输入: 5
输出: 1
解释: 5! = 120, 尾数中有 1 个零.
说明: 你算法的时间复杂度应为 O(log n) 。
************************************************************************************************************************/
//1~n中包含多少个10k,(2n,10m+5)，关键看尾数为5和0的
//但是4*25=100=（2*5)^2,8*125=1000=(2*5)^3
//所以可以看(2*5)^n，那么5比较特殊，只需要看有多少个5的倍数
class TrailingZeroes {
public:
	int trailingZeroes(int n) {

		int res = 0;
		int temp;
		while (n >= 5) {
			temp = n / 5;
			res += temp;
			n = temp;
		}
		return res;
	}
};