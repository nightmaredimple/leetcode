/************************************************************************************************************************
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31,  2^31 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
************************************************************************************************************************/
class Reverse {
public:
	//要注意的问题是如果用define宏定义变量值，最好带上类型说明，比如#define INT_MIN int(-2147483648)
	//不然会出现问题，另外在C++中：int(-2147483648)在某些编译器中为int(-(int(2147483648)))，越界，可以用int(--2147483647-1)代替
	//constexpr创建的是类似于define的恒定常量
	int reverse(int x) {
		int res = 0;
		int n;
		constexpr int limit = 214748364;//-2^31=-2147483648,2^31-1=2147483647
		while (x != 0) {
			n = x % 10;
			if (res > limit || (res == limit && n > 7))
				return 0;
			if (res < -limit || (res == -limit && n < -8))
				return 0;
			res = res * 10 + n;
			x /= 10;
		}
		return res;

	}
};